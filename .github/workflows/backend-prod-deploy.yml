name: Deploy Backend to Production

on:
  push:
    branches:
      - production

jobs:
  build-tag-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: yourdockerhubusername/your-backend-app
      REGISTRY: ghcr.io
      KOYEB_APP_NAME: tilvio

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: git fetch --prune --unshallow || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate new version
        id: version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $latest_tag"
          new_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$3 += 1 ; print}')
          echo "NEW_VERSION=$new_tag" >> $GITHUB_ENV
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NEW_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:prod

      - name: Install Koyeb CLI
        run: curl -fsSL https://cli.koyeb.com/install.sh | bash

      - name: Login to Koyeb
        run: koyeb login --token ${{ secrets.KOYEB_API_TOKEN }}

      - name: Deploy to Koyeb Production
        run: |
          koyeb service update ${{ env.KOYEB_APP_NAME }} \
            --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.NEW_VERSION }}
